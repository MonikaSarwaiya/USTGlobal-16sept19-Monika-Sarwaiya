* to show all the databases .
                                         :- mysql> show databases; 

* to create databases.
                                :-mysql> create database dummydb;

*to use the database.
                                :-mysql> use dummydb;

*to show tables.
                        :-mysql> show tables;


*to create table.
                        :- mysql> create table product(pid int,pname varchar(120),quantity int);

mysql> desc product;

3 rows in set (0.12 sec)

mysql> drop database dummydb;

mysql> show databases;


mysql> create database ust_db;
Query OK, 1 row affected (0.02 sec)

mysql> show databases;


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 DDL COMMANDS
------------------------------
1. create:- syntax:-
                           1. create table product(pid int,pname varchar(120),quantity int);
2. drop:- syntax:- 
                           1. drop table table_name;
                          2. drop database db_name;
 3. alter:- syntax:-
                          1. alter table product add column price int;                              
                          2. 

mysql> show tables;
+------------------+
| Tables_in_ust_db |
+------------------+
| product          |
+------------------+
1 row in set (0.00 sec)

mysql> desc product;
+----------+--------------+------+-----+---------+-------+
| Field    | Type         | Null | Key | Default | Extra |
+----------+--------------+------+-----+---------+-------+
| pid      | int(11)      | YES  |     | NULL    |       |
| pname    | varchar(120) | YES  |     | NULL    |       |
| quantity | int(11)      | YES  |     | NULL    |       |
+----------+--------------+------+-----+---------+-------+
3 rows in set (0.06 sec)

mysql> alter table product add column price int;
Query OK, 0 rows affected (0.27 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc product;
+----------+--------------+------+-----+---------+-------+
| Field    | Type         | Null | Key | Default | Extra |
+----------+--------------+------+-----+---------+-------+
| pid      | int(11)      | YES  |     | NULL    |       |
| pname    | varchar(120) | YES  |     | NULL    |       |
| quantity | int(11)      | YES  |     | NULL    |       |
| price    | int(11)      | YES  |     | NULL    |       |
+----------+--------------+------+-----+---------+-------+
4 rows in set (0.06 sec)

mysql> alter table product change column price cost int;
Query OK, 0 rows affected (0.27 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc product;
+----------+--------------+------+-----+---------+-------+
| Field    | Type         | Null | Key | Default | Extra |
+----------+--------------+------+-----+---------+-------+
| pid      | int(11)      | YES  |     | NULL    |       |
| pname    | varchar(120) | YES  |     | NULL    |       |
| quantity | int(11)      | YES  |     | NULL    |       |
| cost     | int(11)      | YES  |     | NULL    |       |
+----------+--------------+------+-----+---------+-------+
4 rows in set (0.06 sec)

mysql> alter table product drop column cost;
Query OK, 0 rows affected (0.48 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> rename table product to product_info;
Query OK, 0 rows affected (0.09 sec)

mysql> show tables;
+------------------+
| Tables_in_ust_db |
+------------------+
| product_info     |
+------------------+
1 row in set (0.00 sec)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DML COMMNDS
------------------------
1. insert ;- syntax:-
                          1.  insert into table_name(column1_name,column2_name) values(value1.value2......);
         OR            2.  insert into product_info values(102,'pen',15);
                          3. insert into product_info(pid,pname) values(103,'copy');// to insert in a particular column.
                          4. insert into product_info(pid,pname,quantity) values(101,'pencil',10),(104,'pencil-colours',10);// to insert multiple record at a time......

to check:-  syntax:-
                            select * from table_name;
 2. update:- syntax:-
                         1. update table_name set  column_name = value;
3. delete:- syntax:-
                         1. delete from table_name;
DQL COMMANDS
----------------------------
1. select:- syntax:-
                         selection:-  a) select * from table_name;
                         projection:-  b) select column_name from table_name;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ALIAS
--------------
syntax:- 
               1.select column_name as alias_name from table_name;
               2. select  column_name alias_name from table_name;

DISTINCT
-----------------
syntax:-
            1. select distinct designation from employee;
          
WHERE CLAUSE
---------------------------
Used only with select,update & delete...........
syntax:-
              1. select * from table_name where conditions......;
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

EXPRESSION
----------------------
It is a combination of operator & operands.& statements which give some result.....
ex:-   a+ b = c

OPERATOR:-
****************
1.ARTHEMATICS
****************

mysql> select salary+5000 from employee;
+-------------+
| salary+5000 |
+-------------+
|        7000 |
|       15000 |
|       18000 |
|       23000 |
|       17000 |
|       20000 |
|       16000 |
|       17000 |
|       22000 |
+-------------+
9 rows in set (0.00 sec)

mysql> select salary*12 from employee;
+-----------+
| salary*12 |
+-----------+
|     24000 |
|    120000 |
|    156000 |
|    216000 |
|    144000 |
|    180000 |
|    132000 |
|    144000 |
|    204000 |
+-----------+

mysql> select salary/30 from employee;
+-----------+
| salary/30 |
+-----------+
|   66.6667 |
|  333.3333 |
|  433.3333 |
|  600.0000 |
|  400.0000 |
|  500.0000 |
|  366.6667 |
|  400.0000 |
|  566.6667 |
+-----------+
9 rows in set (0.00 sec)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2. COMPARASION  
*****************

Q.1 write a query to display emply record who is working as a developer?
mysql> select * from employee where designation = 'developer';

Q.2 waq to display all employee from employee who is working in deptmo 30?
mysql> select * from employee where deptno!=20;
 
Q.3 waq to disply the record of employee who's salary is greater than 100000?
mysql> select * from employee where salary>10000;

Q.4 waq to display the results of employee who's age is less than 30?
mysql> select * from employee where age<30;

Q.5 waq to display name,sal,emailid,mobileno whos age =18 or greater than 18?
mysql> select name,salary,email,mobile_no,age from employee where age>=18;

Q.6 waq to display salary whos salary is less than equal to 14000?
mysql> select salary from employee where salary>14000;

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3. LOGICAL OPERATOR'S
************************
order of execution of logical operator is first not than and than or.
*******************************************************
1.AND :- if 1st condition is true then only go for checking 2nd condition. and if both are true then only true.
              syntax for and:-
                                         select * from table_name where condition1 and condition2.....
Q.1 waq to display emloyee who is working in department 20 as well as salary is greater than 25000.
mysql>select * from employee where deptno=20 and salary>15000;

Q.2 waq to display name,salary of all the employees who is working in deptno=10&20;
select name,salary from employee where deptno=20 and deptno=10;

Q.3 waq to display employee details whos job designation is tester and age =25.
mysql> select * from employee where designation='tester' and age=25;

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2. OR :- if 1st condition is true then no need to go for checking 2nd condition, it will be true.
             syntax for or:-
                                    select * from table_name where condition1 or condition2.....

Q.1 waq to display all details of employee who is working as a tester or salary greter than 40000.
select * from employee where designation='tester' or salary>20000;

Q.2 waq to display name salary ,age from employee table who is working i deptno 10,40,50.
mysql> select name,salary,age from employee where deptno=10 or  deptno=40 or deptno=50;

Q.3 waq to  display employee details from employee table whos is age is >25 & bloodgroup is B+.
 mysql> select * from employee where age>25 and blood_group='B+';

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3. NOT :- it give vice-versa result......
                syntax:-
                             select * from table_name where  not condition1  ;

Q.1 waq to display all records of employee excluding tester.
mysql> select * from employee where not designation='tester'; OR
mysql> select * from employee where  designation!='tester'; OR
mysql> select * from employee where  designation<>'tester';

Q.2 waq to display name of all the employee who is working as an tech-support or developer  and salary is greater than 20000.
mysql> select name from employee where  designation='tech-support' or designation='developer' and salary>20000;

Q.3  waq to display all the employee excluding developer who are working in deptno=40.
mysql> select * from employee where  designation!='developer' and deptno=40;

Q.4 waq to display all the developer who are working for deptno=10,40.
mysql> select * from employee where  designation='developer' and (deptno=10 or deptno=40);
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SPECIAL OPERATOR'S
**********************
1. IN operator:-   it is used to evaluate multiple values, it works same as an OR operator.
                       syntax:-
                                   select * from table_name where column_name  IN(list of values);

Q.1 waq to display all the details of employee who is working in deptno 40,50,60,70,80.
mysql> select * from employee where  deptno IN(40,50,60,70,80);

Q.2 waq to display name of all the employee who is working as a tester,developer and admin.
mysql> select name  from employee where designation IN('tester','developer','admin');

Q.3 waq to display the details of tester,admin,developer who are working in department no 20 or 30 and salary is graeter than 20000.
mysql> select name from employee where designation IN('tester','developer','admin') and deptno IN(20,30) and salary>20000;

2.NOT IN operator:- it is used when multiple recordes is to be excluded.
                               syntax:-
                                           select * from table_name column_name not in(list of value);

Q.1 waq to display all the record of employee excluding who is working as a tester,admin and developer.
mysql> select * from employee where  designation not in('tester','developer');

Q.2 waq to display all the records of employee whos age is 20,25,30,40.exclude all the records of tester and developer.
mysql> select * from employee where age in(20,25,30,40) and  designation not in('tester','developer');

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3. BETWEEN operator:-   used for searching  based on the range.It takes 3 input's .
                                        a. column_name   b. lower limit   c. upper limit.
                                     syntax:-
                                                  select * from table_name where  column_name BETWEEN value1 and value2;

Q.1 waq to display all the details of employee who's age is between 20 to 40.
mysql> select * from employee where age between  20 and 40;

Q.2 waq to display all the details of employee who got hired during 2017.
mysql> select * from employee where date_of_joining between '2017/01/01' and '2017/12/31';

4. NOT BETWEEN operator:-  

Q.1 waq to display all the records of the employee excluding who's salary is in the range of 15000 to 25000.
mysql> select * from employee where salary not between 15000 and 25000;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5. IS operator:-  It is used to check the null value.
                                  syntax:-
                                      select * from table_name where column_name is null;

6. IS NOT  operator:- 
                                  syntax:-
                                               select * from table_name where column_name is not null;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7. LIKE operator:-  *  It is used for pattern matching......

                               * it uses two wild card characters which are ' _ '  and  ' % '.

                               *  _ :- is used for matching single value or character.

                               *  % :- it takes 0 to n values.

Q.1 waq to display all the employee records whos name starts with 'a'.
mysql> select * from employee where name like 'a%';

Q.2 waq to display name of the employee who's second character is 'i'.
mysql> select * from employee where name like '_i%';

Q.3 waq to display the name of the employee which has atlest 'll' n their name.
mysql> select * from employee where name like '%l%l%';

Q.4 waq to display who's name starts with m and ends with a.
 mysql>select * from employee where  name like 'm%a';

Q.5 waq to display all the records of the employees if the employee name begins with a or s.
mysql> select * from employee where name like 'a%' or name like 's%';

Q.6 waq to display employee name salary who is working in deptment no 10,20,30 and job designation starts with d.
mysql> select * from employee where deptno in(10,20,30) and designation like 'd%';

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

FUNCTION:-       
**********
*function is used to perform some advance functionalities. 

* Function are of 2 types -- 1 . single row function (scalar function).
                                            2. multi row function (aggregate function).

1. single row function :-  for each single input we are getting single output that is known as  single row function.
-------------------------------
                                      
2.multi row function  :-  for multiple input we are getting single output that is known as  multi row function.
------------------------------ 1.max   2.min  3.count  4. sum  5.avg


QUERIES BASED ON MULTI ROW FUNCTION:
---------------------------------------------------------------------
1) mysql> select sum(salary) from employee;
+-------------+
| sum(salary) |
+-------------+
|      132000 |
+-------------+
1 row in set (0.03 sec)

2) mysql> select max(salary) from employee;
+-------------+
| max(salary) |
+-------------+
|       22000 |
+-------------+
1 row in set (0.00 sec)

3) mysql> select min(salary) from employee;
+-------------+
| min(salary) |
+-------------+
|        2000 |
+-------------+
1 row in set (0.00 sec)

4) mysql> select avg(salary) from employee;
+-------------+
| avg(salary) |
+-------------+
|  13200.0000 |
+-------------+
1 row in set (0.00 sec)
 
5) mysql> select count(*) from employee;
+----------+
| count(*) |
+----------+
|       10 |
+----------+
1 row in set (0.00 sec)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ORDER BY :-   " order of execution- 1.from  2. where  3.select  4.order by"
**********
                     syntax:-  select * from table_name where condition order by column_name asc/desc;

*used to sort the result-set in asending or decending order.
* order by executed will be executed at the last.

Q.1 waq to display all the records and salary should be in ascending order.
mysql> select * from employee order by salary asc;

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SUB QUERY
***********
* query within a query is known as sub-query.
* we are using sub query if we dont know the exact value.
            
ex:- select * from table_name where column_name operator (select * from table_name)
      --------------------------------------------------------------                ------------------------------------
                            OUTER QUERY                                                           INNER QUERY

* inner query will execute first,and act as an input for the outer query.
*outer query will give the final result.
* single row sub query :-  when the OPERATOR used is relational operator then it is considered to be single row sub query.
------------------------------

Q.1 waq to display all the records of the employee who's date of joining is same as  shilpa.
mysql> select * from employee where date_of_joining = (select date_of_joining from employee where name='shilpa');

Q.2 waq to display the second maximum salary.
mysql> select max(salary) from employee where salary<(select max(salary)from employee);

* ALL operator:-  it should satisfy all the condition.then only we will get all values.
*ANY operator :- if any condition satisfied then we wil get any value.

*multi row sub query:-  if opertaor is either 'IN or ANY or ALL' or multi row sub query
-------------------------------
                                       syntax:-
                                                     select * from table_name where column_name (IN or ALL or ANY) (select * from table_name);

Q.1 waq to display name of the employee who is working in a location which has atleast one A in the location.
mysql> select name from employee where deptno IN (select deptno from dept where location like '%a%');

Q.2 waq to display all the records of the employee who's is working in admin,operation,developer.
mysql> select * from employee where deptno in (select deptno from dept where dname in('admin','operation','development'));

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

GROUP BY:-
***********
* group by works row by row.
* order of execution : - 1. from  2. groupby  3. count  4. select.

Q.1 waq to display the max salary for each department.
mysql> select max(salary),deptno from employee group by deptno;

Q.2 waq to display the highest salary given to developer in eachh department.
mysql> select max(salary),deptno from employee where designation='developer' group by deptno;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

HAVING CLAUSE:-  syntax:-
*****************                select * from table_name where condition groupby column_name having condition;
                                               
* order of execution : - 1. from  2. where 3. groupby  4. having  5. select.
* execute after the group by.
* if we have to some filteration on group by then we will go fo HAVING CLAUSE.
* it will always be written after group by.

Q.1 waq to display deptno which has atleast 2 employees .
mysql> select deptno from employee group by deptno having count(*)>2;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

TCL command:-
**************
1. ROLLBACK:-

*  to discard the dml changes.
* mysql> set autocommit-0;
* mysql> rollback;

2 . COMMIT:-

* after using commit command it can not be rollback.
* commit is used for permanently saved purpose.
* mysql> update product_info set pname ='pens' where id=101;
* mysql>commit;

3. SAVEPOINT:-
 
* savepoint always works with rollback.
* savepoint means save till that point.
* we need to provide a specific name.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

JOINS:-
********

* to establishing the connection btw more than 1 table.

1. cross - join  OR cartesian - join :-
--------------------------------------------

* records from the first table will be marged to the records of the second table.
* formula = m*n
syntax :  select * from table1 cross join table2; //by ANSI

             select * from t1,t2 <join condition>;// by ORACLE

2. INNER - JOIN:-    
---------------------------

* it is used to obtained only matching records from the tables.
syntax:- select * from table1 alia's inner join table2 alia's on condition.

Query-   select * from employee e inner join dept d on e.deptno=d.`deptno`

3. OUTER JOINS:-
----------------------------

a) LEFT-OUTER JOIN:-
----------------------------------

* join return all the rows of the table on the left side of the join and matching rows for the table on the right side of join.
* combination of inner join & unmatched records present in the left table.

syntax:- select * from table1 left outer join table2 on condition. // ANSI

b)RIGHT-OUTER JOIN:-
----------------------------------

 * combination of inner join & unmatched records present in the right table.

syntax:- select * from table1 right outer join table2 on t1.colum_name=t2.column_name;// ANSI

c) FULL OUTER JOIN:-
---------------------------------
*gives the unmatched  record from both side.

Query -->SELECT * FROM employee e FULL OUTER JOIN dept d ON e.deptno=d.deptno

d)NATURAL JOIN:-
--------------------------------

* similar to innner join where we don't specify the condition.
* it provides inner join if their are common column present else it return cartesian join.

syntax:- select * from table1 natural join table2;

e) SELF JOIN:-
------------------------

*joining of two same table is known as self join.
* we use this join whenever the data to be selected with in the same table but it should present int two different table.
* always we have to use alia's name.

syntax:- select * from table1 join table2 on condition;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

KEY ATTRIBUTES:-
******************

* the attribute with the help of which we can identify a record uniquely.

NON-KEY ATTRIBUTES:- 
***********************

*  all the attributes except key attribute is known as non-key attributes.

PRIME  KEY ATTRIBUTE:-
**************************

*  among the key attributes  an attributes choosen to identify the record uniquely.

NON-PRIME  KEY ATTRIBUTE:-
**************************

*  except prime key all are known as non - prime key attribute.

COMPOSIT KEY:-
****************

*  combination of two or more key attributes which is used the identify a record uniquely.

SUPER KEY:-
***************

*  the set of all the key attributes is known as super key attribute.

FOREIGN KEY:-
***************

* established connection btw 2 tables. 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

FUNCTIONAL DEPENDENCY:-
***************************

* relation with exist such that one attributes determine another attribute uniquickly that is known as functional dependency.
                                                R --->    {    X   ,   Y   }
                                                                 /            \
         (it should be unique)  determinent          dependent

1. total function dependency :- if all the attributes of a relation is determined by a key attributes that is known as total functional dependency.

2.partial function dependency:-  relation is said to be partial dependency if it consist the composit key attribute 2. their exist a dependency such that an attribute can  
                                                    be determined by the other attribute which is the part of composit key.

3.transitive function dependency:-  A relation is said to have a transitive functional dependency if their exits a relation such that an attribute is determin by non key attribute 
                                                       which intern is determine by an key attribute.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

NORMALIZATION:-  
******************
*the process of decomposing the table in smaller table in order to remove redundency and anonoly by identifying dependency is known as normalization.
 in other words the process of reducing the table into normal form is known as normalization.

                                         id            name           simId                 provieder                mobileno
                                        1            monika            101                tatadocomo               985454145
                                        2            monika            102                   idea                       874551454

normal form:-  A state of a table without redundency and anomoly(the problem occured  during dml operation) is known as normal form.
---------------------
1. FNF :- it is said to be FNF if it satisfy the following condition.
------------
a) A table should not contain dublicate record.
b) every cell in the table should be a single value(atomic value).

2. SNF:-  it is said to be FNF if it satisfy the following condition.
a)it should follow the FNF .
b)the table should not contain partial functional attribute.

3. TNF:- it is said to be FNF if it satisfy the following condition.
-------------

a)it should satisfy SNF.
b)the table should not contain transitivefunctional attribute.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

